{"version":3,"sources":["aws-exports.tsx","App.tsx","index.tsx"],"names":["awsmobile","Amplify","configure","aws_exports","userName","jwt","App","props","Auth","currentAuthenticatedUser","bypassCache","then","authUser","username","console","log","catch","err","currentSession","res","accessToken","getAccessToken","getJwtToken","JSON","stringify","className","url","requestInterceptor","request","headers","Authorization","Component","withAuthenticator","rootElement","document","getElementById","ReactDOM","render","path","component"],"mappings":"mSAaeA,EAVG,CACd,mBAAsB,YACtB,6BAAgC,iDAChC,mBAAsB,YACtB,kBAAqB,sBACrB,6BAAgC,6BAChC,MAAS,ICCbC,IAAQC,UAAUC,GAElB,IACIC,EADAC,EAAM,KAGJC,E,kDACJ,WAAYC,GAAa,IAAD,6BACtB,cAAMA,GAENC,IAAKC,yBAAyB,CAC1BC,aAAa,IACdC,MAAK,SAAAC,GAENR,EAAWQ,EAASC,SACpBC,QAAQC,IAAIX,MAEbY,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAE1BT,IAAKU,iBAAiBP,MAAK,SAAAQ,GACzB,IAAIC,EAAcD,EAAIE,iBACtBhB,EAAMe,EAAYE,cAElBR,QAAQC,IAAR,yBAA8BQ,KAAKC,UAAUJ,KAC7CN,QAAQC,IAAR,iBAAsBV,OAjBF,E,qDA2CtB,OACE,yBAAKoB,UAAU,OACd,kBAAC,IAAD,CACEC,IAAI,+CACJC,mBAAoB,SAAAC,GAInB,OADAA,EAAQC,QAAQC,cAAhB,UAAmCzB,GAC5BuB,U,GApDCG,aAkEHC,cAAkB1B,GAAK,G,iBC5DhC2B,EAAcC,SAASC,eAAe,QAE5CC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWjC,MAEb2B,I","file":"static/js/main.97a9582b.chunk.js","sourcesContent":["/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:64e2db0e-ac01-4b72-96c4-eea02623f02b\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_8c1pujn9g\",\n    \"aws_user_pools_web_client_id\": \"39be0fqctitbmhp1mba6et2ofu\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","import React, { Component } from 'react';\nimport './App.css'\nimport SwaggerUI from 'swagger-ui-react';\nimport \"swagger-ui-react/swagger-ui.css\"\nimport { withAuthenticator } from 'aws-amplify-react'\nimport Amplify, { Auth }from 'aws-amplify';\nimport aws_exports from './aws-exports';\n\n// import { Configuration, InstancesConfApi } from '@martinmuellerdev/alf-cdk-typescript-client';\n\nAmplify.configure(aws_exports);\n\nvar jwt = 'no';\nvar userName: string;\n\nclass App extends Component {\n  constructor(props: any) {\n    super(props);\n\n    Auth.currentAuthenticatedUser({\n        bypassCache: false  // Optional, By default is false. If set to true, this call will send a request to Cognito to get the latest user data\n    }).then(authUser =>{\n      // console.log(authUser)\n      userName = authUser.username;\n      console.log(userName)\n    } )\n    .catch(err => console.log(err));\n\n    Auth.currentSession().then(res=>{\n      let accessToken = res.getAccessToken();\n      jwt = accessToken.getJwtToken();\n      //You can print them to see the full objects\n      console.log(`myAccessToken: ${JSON.stringify(accessToken)}`)\n      console.log(`myJwt: ${jwt}`)\n\n      // const config = new Configuration({\n      //   accessToken: jwt,\n      //   basePath: 'https://api.alfpro.net'\n      // });\n\n      // const api = new InstancesConfApi(config);\n\n      // api.getInstanceConfs(undefined, {\n      //   headers: {\n      //     Authorization: jwt\n      //   }\n      // }).then(succeeded => {\n      //   console.log(`getInstanceConfs succeeded`);\n      //   succeeded.data.forEach(instanceConf => {\n      //     // instanceConf.alfInstanceId\n      //     console.log(`instanceConf: ${JSON.stringify(instanceConf)}`)\n      //   })\n      // })\n    })\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n       <SwaggerUI\n         url=\"https://api-explorer.alfpro.net/swagger.json\"\n         requestInterceptor={request => {\n          // request interceptor\n          // add custom headers here\n          request.headers.Authorization = `${jwt}`;\n          return request;\n        }}\n        // responseInterceptor={response => {\n        //   // request interceptor\n        //   // add custom headers here\n        //   response.headers['Access-Control-Allow-Origin'] = '*';\n        //   return response;\n        // }}\n        />\n     </div>\n    );\n  }\n}\n\nexport default withAuthenticator(App, true);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Switch, Route, Router } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\n// import { ConnectedRouter } from \"connected-react-router\";\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nconst rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<App />, rootElement);\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" component={App} />\n    </Switch>\n  </BrowserRouter>, rootElement);\n"],"sourceRoot":""}